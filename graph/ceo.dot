digraph {
overlap=false
splines=true
bgcolor = black
node[style=filled,fillcolor=lightgray,color=white];
edge[arrowtail=odot,dir=back,color=white];

centroiding -> shackHartmann;
centroiding -> pyramid;
bundle -> source;

coordinate_system -> zernikeS;
coordinate_system -> gmt_m1;
coordinate_system -> gmt_m2

zernikeS -> gmt_m1;
zernikeS -> gmt_m2;

ray -> bundle;
vector -> {stereoscopic_edge_sensors;lateral_edge_sensors;coordinate_system;bundle;ray;}
complex_amplitude -> source;

layer -> atmosphere;
profile -> atmosphere;

{aaStats;paStats;BTBT;GBTBT;iterativeSolvers;stopwatch;} -> LMMSE;
stopwatch -> iterativeSolvers;

gpu;

complex_amplitude -> segmentPistonSensor;
mask -> {shackHartmann;gmt_m1;gmt_m2;bundle;BTBT;GBTBT;segmentPistonSensor;}
imaging -> {shackHartmann;pyramid;segmentPistonSensor;}

edge[style=dotted,color=white]
mask -> complex_amplitude;

node[color=darkseagreen,style=rounded,shape=box,fontcolor=whitesmoke];
edge[style=dashed,color=white]

aaStats -> AaStats;
paStats -> PaStats;

centroiding -> Centroiding;
imaging -> Imaging;

source -> Source;
Complex_amplitude[color=lightskyblue3];
complex_amplitude -> Complex_amplitude;
Bundle[color=lightskyblue3];
bundle -> Bundle;
cuDoubleArray -> Bundle;
cuIntArray -> Bundle;
Complex_amplitude -> Source[label="wavefront"];
Bundle -> Source[label="rays"];

shackHartmann -> ShackHartmann;
MaskAbstract -> ShackHartmann;
Centroiding -> ShackHartmann;

pyramid -> Pyramid;
Centroiding -> Pyramid;

segmentPistonSensor -> SegmentPistonSensor;

gmt_m1 -> GMT_M1;
gmt_m2 -> GMT_M2;
ZernikeS;
zernikeS -> ZernikeS;
ZernikeS -> GMT_M1;
ZernikeS -> GMT_M2;
GMT_M1 -> GmtMirrors[label="M1"];
GMT_M2 -> GmtMirrors[label="M2"];
Coordinate_system[color=lightskyblue3];
coordinate_system -> Coordinate_system;
Coordinate_system -> GMT_M1;
Coordinate_system -> GMT_M2;
Coordinates[color=lightskyblue3];
Coordinates -> Coordinate_system;
vector -> Coordinates;

stereoscopic_edge_sensors -> StereoscopicEdgeSensors;
Coordinates -> StereoscopicEdgeSensors;

lateral_edge_sensors -> LateralEdgeSensors;
Coordinates -> LateralEdgeSensors;
cuDoubleArray -> {LateralEdgeSensors; DistanceEdgeSensors;}


AtmosphereAbstract[color=coral3];
atmosphere -> AtmosphereAbstract;
Layer[color=lightskyblue3];
layer -> Layer -> AtmosphereAbstract;

MaskAbstract[color=coral3]
mask -> MaskAbstract;
Complex_amplitude -> SegmentPistonSensor;
Imaging -> {ShackHartmann;Pyramid;SegmentPistonSensor;}

stopwatch -> StopWatch;

gpu -> {cuFloatArray;cuIntArray;cuDoubleArray;}
LMMSE -> {Lmmse;LmmseSH;}
cuFloatArray -> {Imaging;Centroiding;Complex_amplitude;ShackHartmann;SegmentPistonSensor;Layer;MaskAbstract;Lmmse;LmmseSH;AtmosphereAbstract;AaStatsPaStats;}

edge[dir=back,arrowtail=normal];

AtmosphereAbstract -> Atmosphere;
AtmosphereAbstract -> GmtAtmosphere;

MaskAbstract -> Mask;
MaskAbstract -> Telescope;
MaskAbstract -> GMT;

GmtMirrors -> GMT_MX;
SegmentPistonSensor -> DispersedFringeSensor;
LateralEdgeSensors -> DistanceEdgeSensors;

#{rank = source; mask;}
#{rank = same; gpu; GMT_MX; Atmosphere;}
#{rank = same; Source; ShackHartmann}
#{rank=same; stopwatch; StopWatch;}
{rank = same; cuFloatArray; cuDoubleArray; cuIntArray}
{rank = sink; cuFloatArray}
}