digraph {
overlap=false
splines=true
bgcolor = black
node[style=filled,fillcolor=lightgray,color=white];
edge[arrowtail=odot,dir=back,color=white];

{
node[fillcolor=skyblue3]
zernikeS;
coordinate_system;
}

{
node[fillcolor=palegreen3]
ray;
bundle;
source;
complex_amplitude;
}

{
node[fillcolor=tan1]
gmt_m1;
gmt_m2;
stereoscopic_edge_sensors;
lateral_edge_sensors;
}

{
node[fillcolor=gold3]
atmosphere;
layer;
profile;
}

{
node[fillcolor=navajowhite2]
aaStats;
paStats;
}

{
node[fillcolor=indianred3];
vector;
mask;
stopwatch;
gpu;
}

centroiding -> shackHartmann;
centroiding -> pyramid;
bundle -> source;

coordinate_system -> zernikeS;
coordinate_system -> gmt_m1;
coordinate_system -> gmt_m2

zernikeS -> gmt_m1;
zernikeS -> gmt_m2;

ray -> bundle;
vector -> {stereoscopic_edge_sensors;lateral_edge_sensors;coordinate_system;bundle;ray;}
complex_amplitude -> source;

layer -> atmosphere;
profile -> atmosphere;

{aaStats;paStats;BTBT;GBTBT;iterativeSolvers;stopwatch;} -> LMMSE;
stopwatch -> iterativeSolvers;

gpu;

complex_amplitude -> segmentPistonSensor;
mask -> {shackHartmann;gmt_m1;gmt_m2;bundle;BTBT;GBTBT;segmentPistonSensor;}
imaging -> {shackHartmann;pyramid;segmentPistonSensor;}

edge[style=dotted,color=white]
mask -> complex_amplitude;

node[color=darkseagreen,style=rounded,shape=box,fontcolor=whitesmoke];
edge[style=dashed,color=white]

{
node[fontcolor=indianred3];
MaskAbstract;
Mask;
Telescope;
GMT;
StopWatch;
cuIntArray;
cuFloatArray;
cuDoubleArray;
}

{
node[fontcolor=skyblue2]
ZernikeS;
Coordinates;
}

{
node[fontcolor=palegreen3]
Bundle;
Source;
Complex_amplitude;
}

{
node[fontcolor=tan1]
GmtMirrors;
GMT_M1;
GMT_M2;
StereoscopicEdgeSensors;
LateralEdgeSensors;
DistanceEdgeSensors;
}

{
node[fontcolor=gold3]
AtmosphereAbstract;
Atmosphere;
GmtAtmosphere;
Layer;
}

{
node[fontcolor=navajowhite2]
AaStats;
PaStats;
}

{
node[fontcolor=lemonchiffon4]
GMT_MX;
DispersedFringeSensor;
}

aaStats -> AaStats;
paStats -> PaStats;

centroiding -> Centroiding;
imaging -> Imaging;

source -> Source;
Complex_amplitude[color=lightskyblue3];
complex_amplitude -> Complex_amplitude;
Bundle[color=lightskyblue3];
bundle -> Bundle;
cuDoubleArray -> Bundle;
cuIntArray -> Bundle;
Complex_amplitude -> Source[label="wavefront"];
Bundle -> Source[label="rays"];

shackHartmann -> ShackHartmann;
MaskAbstract -> ShackHartmann;
Centroiding -> ShackHartmann;

pyramid -> Pyramid;
Centroiding -> Pyramid;

segmentPistonSensor -> SegmentPistonSensor;

gmt_m1 -> GMT_M1;
gmt_m2 -> GMT_M2;
ZernikeS;
zernikeS -> ZernikeS;
ZernikeS -> GMT_M1;
ZernikeS -> GMT_M2;
GMT_M1 -> GmtMirrors[label="M1"];
GMT_M2 -> GmtMirrors[label="M2"];
Coordinate_system[color=lightskyblue3];
coordinate_system -> Coordinate_system;
Coordinate_system -> GMT_M1;
Coordinate_system -> GMT_M2;
Coordinates[color=lightskyblue3];
Coordinates -> Coordinate_system;
vector -> Coordinates;

stereoscopic_edge_sensors -> StereoscopicEdgeSensors;
Coordinates -> StereoscopicEdgeSensors;

lateral_edge_sensors -> LateralEdgeSensors;
Coordinates -> LateralEdgeSensors;
cuDoubleArray -> {LateralEdgeSensors; DistanceEdgeSensors;}


AtmosphereAbstract[color=coral3];
atmosphere -> AtmosphereAbstract;
Layer[color=lightskyblue3];
layer -> Layer -> AtmosphereAbstract;

MaskAbstract[color=coral3]
mask -> MaskAbstract;
Complex_amplitude -> SegmentPistonSensor;
Imaging -> {ShackHartmann;Pyramid;SegmentPistonSensor;}

stopwatch -> StopWatch;

gpu -> {cuFloatArray;cuIntArray;cuDoubleArray;}
LMMSE -> {Lmmse;LmmseSH;}
cuFloatArray -> {Imaging;Centroiding;Complex_amplitude;ShackHartmann;SegmentPistonSensor;Layer;MaskAbstract;Lmmse;LmmseSH;AtmosphereAbstract;AaStats;PaStats;}

edge[dir=back,arrowtail=normal];

AtmosphereAbstract -> Atmosphere;
AtmosphereAbstract -> GmtAtmosphere;

MaskAbstract -> Mask;
MaskAbstract -> Telescope;
MaskAbstract -> GMT;

GmtMirrors -> GMT_MX;
SegmentPistonSensor -> DispersedFringeSensor;
LateralEdgeSensors -> DistanceEdgeSensors;

#{rank = source; mask;}
#{rank = same; gpu; GMT_MX; Atmosphere;}
#{rank = same; Source; ShackHartmann}
#{rank=same; stopwatch; StopWatch;}
{rank = same; cuFloatArray; cuDoubleArray; cuIntArray}
{rank = sink; cuFloatArray}

  rankdir=LR
  node [shape=plaintext]
  subgraph cluster_01 { 
    #label = "Legend";
    color = black;
    key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
      <tr><td align="right" port="i1">C++ structure embed</td></tr>
      <tr><td align="right" port="i2">Cython class embed</td></tr>
      <tr><td align="right" port="i3">Cython class inherit</td></tr>
      </table>>]
    key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
      <tr><td port="i1">&nbsp;</td></tr>
      <tr><td port="i2">&nbsp;</td></tr>
      <tr><td port="i3">&nbsp;</td></tr>
      </table>>]
    key:i1:e -> key2:i1:w [style=solid,arrowtail=odot]
    key:i2:e -> key2:i2:w [style=dashed,arrowtail=odot]
    key:i3:e -> key2:i3:w [style=dashed]
    abc [shape=none,margin=0,label=<
    <table border="0">
    <tr>
    <td bgcolor="skyblue3"><font color="black">rayTracing</font></td>
    <td bgcolor="palegreen3"><font color="black">source</font></td>
    <td bgcolor="tan1"><font color="black">gmtMirrors</font></td>
    </tr>
    <tr>
    <td bgcolor="gold3"><font color="black">atmosphere</font></td>
    <td bgcolor="navajowhite2"><font color="black">aaStats</font></td>
    <td bgcolor="indianred3"><font color="black">utilities</font></td>
    </tr>
    <tr>
    <td bgcolor="lemonchiffon4"><font color="black">GMTLIB</font></td>
    </tr>
    </table>
    >]   
  }
}